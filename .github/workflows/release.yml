name: Create Release

on:
  workflow_run:
    workflows: ["Deploy to DockerHub"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type de release'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      custom_version:
        description: 'Version personnalis√©e (optionnel)'
        required: false
        type: string

jobs:
  create-release:
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get version from package.json
      id: package-version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.custom_version }}" ]; then
          echo "version=${{ github.event.inputs.custom_version }}" >> $GITHUB_OUTPUT
        else
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        fi

    - name: Get commit messages
      id: get-commits
      run: |
        COMMITS=$(git log $(git describe --tags --abbrev=0 2>/dev/null || echo HEAD^)..HEAD --pretty=format:"- %s")
        echo "commits<<ENDOFCOMMITS" >> $GITHUB_OUTPUT
        echo "$COMMITS" >> $GITHUB_OUTPUT
        echo "ENDOFCOMMITS" >> $GITHUB_OUTPUT

    - name: Update CHANGELOG.md
      id: update-changelog
      run: |
        VERSION="${{ steps.package-version.outputs.version }}"
        CURRENT_DATE=$(date +%Y-%m-%d)
        
        # Cr√©er une entr√©e pour la nouvelle version
        cat > temp_changelog.md << EOF
        ## [$VERSION] - $CURRENT_DATE
        
        ### üöÄ Ajout√©
        - Release $VERSION
        
        ### üîß Modifi√©
        - Mise √† jour de la version
        
        ### üìù Changements
        ${{ steps.get-commits.outputs.commits }}
        
        ---
        
        EOF
        
        # Ajouter au d√©but du CHANGELOG.md (apr√®s la section Unreleased)
        if grep -q "## \[Unreleased\]" CHANGELOG.md; then
          sed -i "/^## \[Unreleased\]/a\\" temp_changelog.md
          sed -i "/^## \[Unreleased\]/r temp_changelog.md" CHANGELOG.md
        else
          # Si pas de section Unreleased, ajouter √† la fin
          echo "" >> CHANGELOG.md
          cat temp_changelog.md >> CHANGELOG.md
        fi
        rm temp_changelog.md
        
        echo "CHANGELOG mis √† jour pour la version $VERSION"

    - name: Commit CHANGELOG changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add CHANGELOG.md
        git commit -m "docs: update CHANGELOG for version ${{ steps.package-version.outputs.version }}"
        git push origin main

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.package-version.outputs.version }}
        name: Release v${{ steps.package-version.outputs.version }}
        body: |
          ## What's Changed
          ${{ steps.get-commits.outputs.commits }}
          
          ## Docker Images
          - Latest: `${{ secrets.DOCKERHUB_USERNAME }}/benevoclic-api:latest`
          - Version: `${{ secrets.DOCKERHUB_USERNAME }}/benevoclic-api:${{ steps.package-version.outputs.version }}`
          - Commit: `${{ secrets.DOCKERHUB_USERNAME }}/benevoclic-api:${{ github.sha }}`
          
          ## üìã CHANGELOG
          
          Consultez le [CHANGELOG.md](CHANGELOG.md) pour plus de d√©tails.
          
          ## üöÄ D√©clenchement
          
          ${{ github.event_name == 'workflow_dispatch' && 'Release d√©clench√©e manuellement' || 'Release d√©clench√©e automatiquement apr√®s d√©ploiement DockerHub' }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}