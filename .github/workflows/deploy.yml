name: Deploy to OVH VPS

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/api:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/api:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/api:buildcache,mode=max

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.OVH_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "Host vps\n\tHostName ${{ secrets.VPS_HOST }}\n\tUser ${{ secrets.VPS_USERNAME }}\n\tStrictHostKeyChecking no\n\tIdentityFile ~/.ssh/id_rsa" > ~/.ssh/config

      - name: Create config directory and decode Firebase config
        run: |
          ssh vps 'mkdir -p ~/app/config'
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}" | ssh vps 'base64 -d > ~/app/config/serviceAccountKey.json'

      - name: Deploy to VPS
        run: |
          # Créer le fichier docker-compose.yml sur le VPS
          cat << 'EOF' | ssh vps 'cat > ~/docker-compose.yml'
          version: '3.8'
          
          services:
            api:
              image: ${{ secrets.DOCKERHUB_USERNAME }}/api:latest
              restart: always
              ports:
                - "3000:3000"
              environment:
                - MONGODB_URL=${{ secrets.MONGODB_URL }}
                - PORT=3000
                - NODE_ENV=production
                - FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}
                - GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
                - GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }}
                - FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
              volumes:
                - ~/app/config:/app/config
          EOF

          # Déployer avec Docker Compose
          ssh vps '
            # Installer Docker et Docker Compose si nécessaire
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker $USER
            fi
            
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Pull la dernière image et redémarrer les services
            docker-compose pull
            docker-compose up -d --force-recreate
            
            # Nettoyer les images non utilisées
            docker image prune -f
          ' 