name: Deploy to OVH VPS

on:
  workflow_dispatch:

jobs:
  deploy-to-ovh:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@v1.0.3
        env:
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
          MONGODB_DB_NAME: benevoclic
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_TTL: ${{ secrets.REDIS_TTL }}
          REDIS_DB: ${{ secrets.REDIS_DB }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.OVH_SSH_KEY }}
          port: 22
          envs: MONGODB_URL,MONGODB_DB_NAME,FIREBASE_CLIENT_EMAIL,FIREBASE_PRIVATE_KEY,FIREBASE_PROJECT_ID,FIREBASE_API_KEY,REDIS_PASSWORD,REDIS_TTL,REDIS_DB
          script: |
            mkdir -p ~/benevoclic
            cat > ~/benevoclic/docker-compose.yml << EOL
            version: '3.8'
            
            services:
              redis:
                image: redis:7-alpine
                container_name: benevoclic-redis
                restart: always
                ports:
                  - "6379:6379"
                volumes:
                  - redis_data:/data
                command: redis-server --appendonly yes --requirepass \${REDIS_PASSWORD:-}
                networks:
                  - benevoclic-network
                healthcheck:
                  test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
                  interval: 30s
                  timeout: 10s
                  retries: 3
            
              api:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/benevoclic-api:latest
                container_name: benevoclic-api
                restart: always
                ports:
                  - "3000:3000"
                environment:
                  NODE_ENV: production
                  PORT: 3000
                  MONGODB_URL: \${MONGODB_URL}
                  MONGODB_DB_NAME: \${MONGODB_DB_NAME}
                  FIREBASE_CLIENT_EMAIL: \${FIREBASE_CLIENT_EMAIL}
                  FIREBASE_PRIVATE_KEY: \${FIREBASE_PRIVATE_KEY}
                  FIREBASE_PROJECT_ID: \${FIREBASE_PROJECT_ID}
                  FIREBASE_API_KEY: \${FIREBASE_API_KEY}
                  REDIS_HOST: redis
                  REDIS_PORT: 6379
                  REDIS_PASSWORD: \${REDIS_PASSWORD}
                  REDIS_TTL: \${REDIS_TTL:-300}
                  REDIS_DB: \${REDIS_DB:-0}
                depends_on:
                  redis:
                    condition: service_healthy
                networks:
                  - benevoclic-network
                healthcheck:
                  test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
                  interval: 30s
                  timeout: 10s
                  retries: 3
                  start_period: 40s
            
            volumes:
              redis_data:
            
            networks:
              benevoclic-network:
                driver: bridge
            EOL

            cd ~/benevoclic
            docker compose pull
            docker compose up -d
